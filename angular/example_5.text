<div class="generation-container">
  <header>
    <h1>Generation</h1>
    <div class="header-info">
      <p>Job ID: 908dkfj09dsfd93</p>
      <p>User ID: ActiveChatOpenAI</p>
      <p>Time: 4/5/2024, 10:47 PM</p>
    </div>
  </header>

  <!-- Sidebar -->
  <aside class="sidebar">
    <h2>Tasks</h2>
    <ul>
      <li *ngFor="let task of tasks">{{ task.name }}</li>
    </ul>
  </aside>

  <!-- Main Content -->
  <main>
    <div class="run-section">
      <div class="run-header">
        <span>10 Sec</span>
        <span>300 Prompt</span>
        <span>200 Completion</span>
        <span>500 Total Number of Tokens</span>
        <span>gpt-3.5-turbo-16k</span>
      </div>

      <div class="output-section">
        <h3>Output</h3>
        <p>
          Here is an example of an SQL insert statement to add a new user to a
          MySQL database:...
        </p>
      </div>

      <div class="input-section">
        <h3>Input</h3>
        <p>
          Text to prepend to sanitized prompt: Make an SQL insert statement to
          add a new user to our database...
        </p>
      </div>

      <div class="metadata-section">
        <h3>Metadata</h3>
        <code>{ tags: ['step:step:3'] }</code>
      </div>
    </div>
  </main>

  <!-- Scores Section -->
  <div class="scores-section">
    <h2>Scores</h2>
    <ul>
      <li>
        <span>Scanners</span><span>Score</span>
      </li>
      <li *ngFor="let score of scores">
        <span>{{ score.scanner }}</span><span>{{ score.value }}%</span>
      </li>
    </ul>
  </div>
</div>


.generation-container {
  display: grid;
  grid-template-columns: 1fr 3fr 1fr;
  grid-gap: 20px;
  padding: 20px;
}

header {
  grid-column: 1 / span 3;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  background-color: #f4f4f4;
}

.header-info p {
  margin: 0;
}

.sidebar {
  background-color: #f9f9f9;
  padding: 20px;
}

.run-section {
  background-color: #ffffff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
}

.run-header {
  display: flex;
  justify-content: space-between;
  padding: 10px 0;
}

.output-section, .input-section, .metadata-section {
  margin-top: 20px;
}

.scores-section {
  background-color: #fafafa;
  padding: 20px;
  border-radius: 8px;
}

ul {
  list-style: none;
  padding: 0;
}

li {
  display: flex;
  justify-content: space-between;
  padding: 5px 0;
}


import { Component } from '@angular/core';

@Component({
  selector: 'app-generation',
  templateUrl: './generation.component.html',
  styleUrls: ['./generation.component.css']
})
export class GenerationComponent {
  tasks = [
    { name: 'Company financial statement Trace' },
    { name: 'RunnableSequence' },
    { name: 'RunnableProfile' },
    { name: 'RunnableParseThrough' },
    { name: 'VectorStoreRetrieval' },
    { name: 'PromptTemplate' },
    { name: 'AzureChatOpenAI' },
    { name: 'StrOutputParser' },
  ];

  scores = [
    { scanner: 'harmfulness', value: 10 },
    { scanner: 'faithfulness', value: 50 },
    { scanner: 'answer_relevancy', value: 95 },
    { scanner: 'content_utilization', value: 15 }
  ];
}
