import { Component, Input, Output, EventEmitter } from '@angular/core';

interface SelectOption {
  id: number;
  content: string;
  selected?: boolean;
}

@Component({
  selector: 'app-custom-select',
  templateUrl: './custom-select.component.html',
  styleUrls: ['./custom-select.component.css']
})
export class CustomSelectComponent {
  @Input() options: SelectOption[] = [];
  @Output() selectedOption = new EventEmitter<SelectOption>();

  selectedId: number | null = null;
  dropdownOpen = false;

  ngOnInit() {
    const selected = this.options.find(option => option.selected);
    if (selected) {
      this.selectedId = selected.id;
    }
  }

  get selectedContent(): string {
    const selectedOption = this.options.find(option => option.id === this.selectedId);
    return selectedOption ? selectedOption.content : 'Select an option';
  }

  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }

  onSelect(option: SelectOption) {
    this.selectedId = option.id;
    this.selectedOption.emit(option);
    this.dropdownOpen = false; // Close the dropdown after selecting an option
  }
}



==================================================


import { Component, Input, Output, EventEmitter } from '@angular/core';

interface SelectOption {
  id: number;
  content: string;
  selected?: boolean;
}

@Component({
  selector: 'app-custom-select',
  templateUrl: './custom-select.component.html',
  styleUrls: ['./custom-select.component.css']
})
export class CustomSelectComponent {
  @Input() options: SelectOption[] = [];
  @Output() selectedOption = new EventEmitter<SelectOption>();

  selectedId: number | null = null;
  selectedContent: string | null = null;
  dropdownOpen = false;

  ngOnInit() {
    const selected = this.options.find(option => option.selected);
    if (selected) {
      this.selectedId = selected.id;
      this.selectedContent = selected.content;
    }
  }

  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }

  onSelect(option: SelectOption) {
    this.selectedId = option.id;
    this.selectedContent = option.content;
    this.selectedOption.emit(option);
    this.dropdownOpen = false; // Close the dropdown after selecting an option
  }
}


<div class="custom-select">
  <div class="select-box" (click)="toggleDropdown()">
    <div *ngIf="selectedContent !== null; else placeholder">
      {{ selectedContent }}
    </div>
    <ng-template #placeholder>
      Select an option
    </ng-template>
  </div>
  <div class="dropdown" *ngIf="dropdownOpen">
    <div
      *ngFor="let option of options"
      (click)="onSelect(option)"
      [class.selected]="option.id === selectedId"
    >
      {{ option.content }}
    </div>
  </div>
</div>
