from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, scoped_session
from contextlib import contextmanager

class DatabaseSessionManager:
    def __init__(self, connection_string):
        self.engine = create_engine(connection_string)
        self.Session = scoped_session(sessionmaker(bind=self.engine))

    @contextmanager
    def get_session(self):
        session = self.Session()
        try:
            yield session
            session.commit()
        except Exception as e:
            session.rollback()
            raise
        finally:
            session.close()

# Example usage
db_manager = DatabaseSessionManager("postgresql+psycopg2://user:password@localhost/mydatabase")

with db_manager.get_session() as session:
    # perform database operations
    pass
ss
