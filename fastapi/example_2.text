from fastapi import FastAPI
from starlette.staticfiles import StaticFiles

app = FastAPI()

# Mount the static files directory
app.mount("/static", StaticFiles(directory="static"), name="static")

# Define a sample endpoint to test the server
@app.get("/")
async def read_root():
    return {"message": "FastAPI server is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)




from fastapi import FastAPI
from starlette.staticfiles import StaticFiles
import os

app = FastAPI()

# Get the directory of the current script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construct the path to the static directory
static_dir = os.path.join(script_dir, "static")

# Ensure the static directory exists
if not os.path.isdir(static_dir):
    os.makedirs(static_dir)

# Mount the static files directory
app.mount("/static", StaticFiles(directory=static_dir), name="static")

# Define a sample endpoint to test the server
@app.get("/")
async def read_root():
    return {"message": "FastAPI server is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)










from fastapi import FastAPI
from starlette.staticfiles import StaticFiles
import os

app = FastAPI()

# Get the directory of the current script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construct the paths to the static directories
static1_dir = os.path.join(script_dir, "static1")
static2_dir = os.path.join(script_dir, "static2")

# Ensure the static directories exist
if not os.path.isdir(static1_dir):
    os.makedirs(static1_dir)
if not os.path.isdir(static2_dir):
    os.makedirs(static2_dir)

# Mount the static files directories
app.mount("/static1", StaticFiles(directory=static1_dir), name="static1")
app.mount("/static2", StaticFiles(directory=static2_dir), name="static2")

# Define a sample endpoint to test the server
@app.get("/")
async def read_root():
    return {"message": "FastAPI server is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)





from fastapi import FastAPI, HTTPException
from fastapi.responses import FileResponse
import os

app = FastAPI()

# Get the directory of the current script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construct the paths to the static directories
static1_dir = os.path.join(script_dir, "static1")
static2_dir = os.path.join(script_dir, "static2")

@app.get("/static/{file_path:path}")
async def serve_static(file_path: str):
    file_path1 = os.path.join(static1_dir, file_path)
    file_path2 = os.path.join(static2_dir, file_path)

    if os.path.exists(file_path1):
        return FileResponse(file_path1)
    elif os.path.exists(file_path2):
        return FileResponse(file_path2)
    else:
        raise HTTPException(status_code=404, detail="File not found")

# Define a sample endpoint to test the server
@app.get("/")
async def read_root():
    return {"message": "FastAPI server is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)




from fastapi import FastAPI
from starlette.staticfiles import StaticFiles
import os
import stat

app = FastAPI()

# Get the directory of the current script
script_dir = os.path.dirname(os.path.abspath(__file__))

# Construct the paths to the static directories
static1_dir = os.path.join(script_dir, "static1")
static2_dir = os.path.join(script_dir, "static2")

# Function to create a directory and set permissions
def create_dir_with_permissions(dir_path):
    if not os.path.isdir(dir_path):
        os.makedirs(dir_path)
        # Set the directory permissions to allow read/write/execute for the owner
        os.chmod(dir_path, stat.S_IRWXU | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH)

# Create the static directories with the required permissions
create_dir_with_permissions(static1_dir)
create_dir_with_permissions(static2_dir)

# Mount the static files directories
app.mount("/static1", StaticFiles(directory=static1_dir), name="static1_files")
app.mount("/static2", StaticFiles(directory=static2_dir), name="static2_files")

# Define a sample endpoint to test the server
@app.get("/")
async def read_root():
    return {"message": "FastAPI server is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)



if 'application/json' in response.headers.get('Content-Type', ''):
        try:
            data = response.json()  # Attempt to parse JSON
            print('Success:', data)
        except ValueError as json_err:
            print('JSON parsing error:', json_err)
    else:
        print('Response is not JSON:', response.text)




 MY_JSON_SETTING: Optional[Dict[str, Any]]  # Use a dictionary to hold JSON data
