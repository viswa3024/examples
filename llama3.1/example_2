pip install fastapi fastapi-security fastapi-sessions

from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.security import HTTPBasic, HTTPBasicCredentials
from fastapi_sessions.frontends.implementations import SessionCookie, CookieParameters
from fastapi_sessions.session_verifier import SessionVerifier
from fastapi_sessions.backends.in_memory import InMemoryBackend
from uuid import uuid4

app = FastAPI()

# Set up session cookie parameters
cookie_params = CookieParameters()
cookie = SessionCookie(
    cookie_name="cookie",
    identifier="general_verifier",
    auto_error=True,
    secret_key="DONOTUSE",
    cookie_params=cookie_params,
)

# Set up session verifier
class BasicVerifier(SessionVerifier[uuid4, dict]):
    def __init__(self, *, identifier: str, auto_error: bool, backend: InMemoryBackend[uuid4, dict], auth_http_exception: HTTPException):
        self._identifier = identifier
        self._auto_error = auto_error
        self._backend = backend
        self._auth_http_exception = auth_http_exception

    @property
    def identifier(self):
        return self._identifier

    def verify_session(self, model: dict) -> bool:
        """If the session exists, it is valid"""
        return True

verifier = BasicVerifier(
    identifier="general_verifier",
    auto_error=True,
    backend=InMemoryBackend[uuid4, dict](),
    auth_http_exception=HTTPException(status_code=403, detail="invalid session"),
)

# Set up basic authentication
security = HTTPBasic()

# Create a route to create a new session
@app.post("/create_session/{name}")
async def create_session(name: str, response: Response):
    session = uuid4()
    data = {"username": name}
    await verifier.backend.create(session, data)
    cookie.attach_to_response(response, session)
    return f"created session for {name}"

# Create a route to test the session
@app.get("/test_session")
async def test_session(session: dict = Depends(verifier)):
    return {"session": session}



  pip install fastapi uvicorn elasticsearch elasticsearch-dsl passlib bcrypt python-jose



pip install fastapi uvicorn elasticsearch[async] passlib bcrypt python-jose


pip install fastapi uvicorn sqlalchemy bcrypt jwt
