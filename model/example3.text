import openai
import os
from dotenv import load_dotenv
import matplotlib.pyplot as plt
import io
import base64
import json

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

def generate_report(prompt: str):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo-16k",
        messages=[
            {"role": "system", "content": "You are a financial assistant. Return a report and, if asked, JSON format for chart."},
            {"role": "user", "content": prompt}
        ]
    )
    content = response['choices'][0]['message']['content']

    try:
        json_start = content.index('{')
        chart_json = json.loads(content[json_start:])
        chart_image = generate_chart(chart_json)
        return {
            "report": content,
            "chart": chart_image
        }
    except:
        return {
            "report": content,
            "chart": None
        }

def generate_chart(chart_data):
    fig, ax = plt.subplots()

    if chart_data['type'] == 'bar':
        ax.bar(chart_data['labels'], chart_data['data'])
    elif chart_data['type'] == 'pie':
        ax.pie(chart_data['data'], labels=chart_data['labels'], autopct='%1.1f%%')
    elif chart_data['type'] == 'line':
        ax.plot(chart_data['labels'], chart_data['data'])

    ax.set_title(chart_data.get('label', 'Chart'))

    buf = io.BytesIO()
    plt.tight_layout()
    plt.savefig(buf, format='png')
    buf.seek(0)
    base64_img = base64.b64encode(buf.read()).decode('utf-8')
    plt.close(fig)
    return base64_img



    Generate a bar chart report of revenue by month for Q1 2024.
Generate a pie chart showing percentage of expenses by department.
Give a line chart of profit trends from Jan to June 2023.
