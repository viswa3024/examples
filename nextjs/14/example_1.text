// app/api/data/route.js
import { NextResponse } from 'next/server';

export async function GET() {
  try {
    // Simulate fetching data from a database or external API
    const data = {
      message: "Hello, this is your data!",
      timestamp: new Date().toISOString(),
    };

    return NextResponse.json(data, { status: 200 });
  } catch (error) {
    console.error("Error fetching data:", error);
    return NextResponse.json({ message: "Internal Server Error" }, { status: 500 });
  }
}



// app/page.js
import React from 'react';

const HomePage = ({ data, error }) => {
  if (error) {
    return <div>Error: {error.message}</div>;
  }

  return (
    <div>
      <h1>Welcome to Next.js 14!</h1>
      <p>{data.message}</p>
      <p>Timestamp: {data.timestamp}</p>
    </div>
  );
};

// This function gets called at build time on the server-side
export async function getServerSideProps() {
  try {
    // Fetch data from the API route
    const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/data`, { timeout: 5000 });
    
    if (!res.ok) {
      throw new Error('Network response was not ok');
    }
    
    const data = await res.json();

    // Pass data to the page via props
    return { props: { data } };
  } catch (error) {
    console.error('Error fetching data:', error);
    return { props: { error: { message: error.message } } };
  }
}

export default HomePage;



// utils/fetchWithRetry.js
export async function fetchWithRetry(url, options = {}, retries = 3, backoff = 300) {
  for (let attempt = 0; attempt < retries; attempt++) {
    try {
      const res = await fetch(url, options);
      
      if (!res.ok) {
        throw new Error('Network response was not ok');
      }

      return await res.json();
    } catch (error) {
      if (attempt < retries - 1) {
        await new Promise(res => setTimeout(res, backoff * (attempt + 1)));
      } else {
        throw error;
      }
    }
  }
}

// app/page.js (modification)
import { fetchWithRetry } from '../utils/fetchWithRetry';

export async function getServerSideProps() {
  try {
    const data = await fetchWithRetry(`${process.env.NEXT_PUBLIC_BASE_URL}/api/data`, { timeout: 5000 });
    return { props: { data } };
  } catch (error) {
    console.error('Error fetching data:', error);
    return { props: { error: { message: error.message } } };
  }
}



=============================


// app/api/data/route.js
import { NextResponse } from 'next/server';

export async function GET() {
  try {
    // Simulate fetching data from a database or external API
    const data = {
      message: "Hello, this is your data!",
      timestamp: new Date().toISOString(),
    };

    return NextResponse.json(data, { status: 200 });
  } catch (error) {
    console.error("Error fetching data:", error);
    return NextResponse.json({ message: "Internal Server Error" }, { status: 500 });
  }
}


// app/page.js
import React from 'react';

async function fetchData() {
  const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/data`, {
    next: { revalidate: 60 }, // Optional: Revalidate every 60 seconds
  });

  if (!res.ok) {
    throw new Error('Failed to fetch data');
  }

  return res.json();
}

export default async function HomePage() {
  let data;

  try {
    data = await fetchData();
  } catch (error) {
    console.error('Error fetching data:', error);
    data = { message: 'Error fetching data', timestamp: '' };
  }

  return (
    <div>
      <h1>Welcome to Next.js 14!</h1>
      <p>{data.message}</p>
      <p>Timestamp: {data.timestamp}</p>
    </div>
  );
}
