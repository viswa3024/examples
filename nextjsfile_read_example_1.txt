// src/pages/api/appconfig.js

import fs from 'fs';
import path from 'path';

export default function handler(req, res) {
  const filePath = path.resolve('./src/app/config/appconfig.json');
  const jsonData = JSON.parse(fs.readFileSync(filePath, 'utf-8'));

  res.status(200).json(jsonData);
}


// src/pages/api/appconfig.js

import getConfig from 'next/config';
import fs from 'fs';
import path from 'path';

export default function handler(req, res) {
  const { serverRuntimeConfig } = getConfig();
  const filePath = path.resolve(serverRuntimeConfig.APP_CONFIG_PATH);
  const jsonData = JSON.parse(fs.readFileSync(filePath, 'utf-8'));

  if (req.method === 'GET') {
    res.status(200).json(jsonData);
  } else {
    res.setHeader('Allow', ['GET']);
    res.status(405).end(`Method ${req.method} Not Allowed`);
  }
}


// src/pages/api/appconfig.js

import fs from 'fs';
import path from 'path';

export async function get(req, res) {
  const filePath = path.resolve('./src/app/config/appconfig.json');

  try {
    // Read file asynchronously
    const jsonData = await fs.promises.readFile(filePath, 'utf-8');
    const parsedData = JSON.parse(jsonData);
    
    // Send JSON response
    res.status(200).json(parsedData);
  } catch (error) {
    console.error('Error reading JSON file:', error);
    res.status(500).json({ error: 'Failed to read JSON file' });
  }
}

export default async function handler(req, res) {
  if (req.method === 'GET') {
    await get(req, res);
  } else {
    res.setHeader('Allow', ['GET']);
    res.status(405).end(`Method ${req.method} Not Allowed`);
  }
}
